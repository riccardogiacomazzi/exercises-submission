{"ast":null,"code":"var _jsxFileName = \"/Users/riccardogiacomazzi/Desktop/exercises-submission/part1/anedoctes/src/App.js\",\n  _s = $RefreshSig$();\n// import { useState } from 'react'\n\n// const Button = ({handleclick, text}) => <button onClick={handleclick}>{text}</button>     // button object\n// const Header = ({text}) => <h1>{text}</h1>\n\n// function getRandomIntInclusive(min, max) {                                                //random number between range\n//   min = Math.ceil(min);\n//   max = Math.floor(max);\n//   return Math.floor(Math.random() * (max - min + 1) + min);\n// }\n\n// const votesArray = [0, 0, 0, 0, 0, 0, 0, 0]\n// const updatedArray = [...votesArray]\n\n// const App = () => {\n//   const anecdotes = [\n//     'If it hurts, do it more often.',\n//     'Adding manpower to a late software project makes it later!',\n//     'The first 90 percent of the code accounts for the first 10 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.',\n//     'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.',\n//     'Premature optimization is the root of all evil.',\n//     'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.',\n//     'Programming without an extremely heavy use of console.log is same as if a doctor would refuse to use x-rays or blood tests when diagnosing patients.',\n//     'The only way to go fast, is to go well.'\n//   ]\n//   const [selected, setSelected] = useState(0)\n//   const [vote, setVote] = useState(votesArray)                                            // votes array\n//   const [mostVoted, setMostVoted] = useState(0)                                           // the index of the most voted anecdote\n\n//   const mostVotedUpdated = () => { \n//     setMostVoted(vote.indexOf(Math.max(...vote)))\n//     // console.log('Votes array: ',vote)\n//     // console.log('most voted amount', vote[mostVoted])\n//     return(\n//       mostVoted\n//     )\n//   }\n\n//   const anecdocteSelector = () => setSelected(getRandomIntInclusive(0 , 7))\n\n//   const voteAnecdocte = () => {\n//     updatedArray[selected] += 1\n//     setVote(updatedArray)\n//     mostVotedUpdated();\n//   }\n\n//   return (\n//     <div>\n//       <Header text={'Anecdote of the day'} />\n//       <Button handleclick={anecdocteSelector} text={'Click for an anedocte'} />\n//       <Button handleclick={voteAnecdocte} text={\"Vote\"} />\n//       <div>\n//         {anecdotes[selected]}\n//       </div>\n//         <Header text={'Most voted anecdote'} />\n//         {anecdotes[mostVoted]}\n//         <p>Was voted {vote[mostVoted]} times.</p>\n//       </div>\n//   )\n// }\n\n// export default App\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = props => {\n  _s();\n  const [selected, setSelected] = useState(0);\n  const [points, setPoints] = useState({\n    0: 0,\n    1: 0,\n    2: 0,\n    3: 0,\n    4: 0,\n    5: 0\n  });\n  function getRandomInt(max) {\n    const random = Math.floor(Math.random() * Math.floor(max));\n    return random;\n  }\n  const setVote = () => {\n    const copy = {\n      ...points\n    };\n    copy[selected] += 1;\n    setPoints(copy);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Anecdote of the day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), props.anecdotes[selected], \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 35\n    }, this), \"has \", points[selected], \" votes \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setVote,\n      children: \"vote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setSelected(getRandomInt(anecdotes.length)),\n      children: \"next anecdote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Anecdote with most votes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), props.anecdotes[Object.keys(points).reduce((a, b) => points[a] > points[b] ? a : b)], \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 94\n    }, this), \"has \", Object.values(points).reduce((a, b) => a > b ? a : b), \" votes \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 73\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"3mcBJ12AXkLGas7fJizTZQ8cy7c=\");\n_c = App;\nconst anecdotes = ['If it hurts, do it more often', 'Adding manpower to a late software project makes it later!', 'The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.', 'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.', 'Premature optimization is the root of all evil.', 'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.'];\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReactDOM","jsxDEV","_jsxDEV","App","props","_s","selected","setSelected","points","setPoints","getRandomInt","max","random","Math","floor","setVote","copy","children","fileName","_jsxFileName","lineNumber","columnNumber","anecdotes","onClick","length","Object","keys","reduce","a","b","values","_c","$RefreshReg$"],"sources":["/Users/riccardogiacomazzi/Desktop/exercises-submission/part1/anedoctes/src/App.js"],"sourcesContent":["// import { useState } from 'react'\n\n// const Button = ({handleclick, text}) => <button onClick={handleclick}>{text}</button>     // button object\n// const Header = ({text}) => <h1>{text}</h1>\n\n// function getRandomIntInclusive(min, max) {                                                //random number between range\n//   min = Math.ceil(min);\n//   max = Math.floor(max);\n//   return Math.floor(Math.random() * (max - min + 1) + min);\n// }\n\n// const votesArray = [0, 0, 0, 0, 0, 0, 0, 0]\n// const updatedArray = [...votesArray]\n\n// const App = () => {\n//   const anecdotes = [\n//     'If it hurts, do it more often.',\n//     'Adding manpower to a late software project makes it later!',\n//     'The first 90 percent of the code accounts for the first 10 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.',\n//     'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.',\n//     'Premature optimization is the root of all evil.',\n//     'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.',\n//     'Programming without an extremely heavy use of console.log is same as if a doctor would refuse to use x-rays or blood tests when diagnosing patients.',\n//     'The only way to go fast, is to go well.'\n//   ]\n//   const [selected, setSelected] = useState(0)\n//   const [vote, setVote] = useState(votesArray)                                            // votes array\n//   const [mostVoted, setMostVoted] = useState(0)                                           // the index of the most voted anecdote\n  \n//   const mostVotedUpdated = () => { \n//     setMostVoted(vote.indexOf(Math.max(...vote)))\n//     // console.log('Votes array: ',vote)\n//     // console.log('most voted amount', vote[mostVoted])\n//     return(\n//       mostVoted\n//     )\n//   }\n\n//   const anecdocteSelector = () => setSelected(getRandomIntInclusive(0 , 7))\n\n//   const voteAnecdocte = () => {\n//     updatedArray[selected] += 1\n//     setVote(updatedArray)\n//     mostVotedUpdated();\n//   }\n  \n//   return (\n//     <div>\n//       <Header text={'Anecdote of the day'} />\n//       <Button handleclick={anecdocteSelector} text={'Click for an anedocte'} />\n//       <Button handleclick={voteAnecdocte} text={\"Vote\"} />\n//       <div>\n//         {anecdotes[selected]}\n//       </div>\n//         <Header text={'Most voted anecdote'} />\n//         {anecdotes[mostVoted]}\n//         <p>Was voted {vote[mostVoted]} times.</p>\n//       </div>\n//   )\n// }\n\n// export default App\n\n\nimport React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst App = (props) => {\n  const [selected, setSelected] = useState(0)\n  const [points, setPoints] = useState({0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0})\n\n  function getRandomInt(max) {\n    const random = Math.floor(Math.random() * Math.floor(max))\n    return random;\n  }\n\n  const setVote = () => {\n    const copy = { ...points }\n    copy[selected] += 1\n    setPoints(copy)\n  }\n\n  return (\n    <div>\n      <h1>Anecdote of the day</h1>\n      {props.anecdotes[selected]} <br />\n      has {points[selected]} votes <br />\n      <button onClick={setVote}>vote</button>\n      <button onClick={() => setSelected(getRandomInt(anecdotes.length))}>next anecdote</button>\n      <h1>Anecdote with most votes</h1>\n      {props.anecdotes[Object.keys(points).reduce((a, b) => points[a] > points[b] ? a : b)]} <br />\n      has {Object.values(points).reduce((a, b) => a > b ? a : b)} votes <br />\n    </div>\n  )\n}\n\nconst anecdotes = [\n  'If it hurts, do it more often',\n  'Adding manpower to a late software project makes it later!',\n  'The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.',\n  'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.',\n  'Premature optimization is the root of all evil.',\n  'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.'\n]\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}